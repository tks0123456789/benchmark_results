python mnist_mlp.py
Using Theano backend.
Using gpu device 0: GeForce GTX 1070 (CNMeM is disabled, cuDNN 5005)
60000 train samples
10000 test samples
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
dense_1 (Dense)                  (None, 512)           401920      dense_input_1[0][0]              
____________________________________________________________________________________________________
activation_1 (Activation)        (None, 512)           0           dense_1[0][0]                    
____________________________________________________________________________________________________
dropout_1 (Dropout)              (None, 512)           0           activation_1[0][0]               
____________________________________________________________________________________________________
dense_2 (Dense)                  (None, 512)           262656      dropout_1[0][0]                  
____________________________________________________________________________________________________
activation_2 (Activation)        (None, 512)           0           dense_2[0][0]                    
____________________________________________________________________________________________________
dropout_2 (Dropout)              (None, 512)           0           activation_2[0][0]               
____________________________________________________________________________________________________
dense_3 (Dense)                  (None, 10)            5130        dropout_2[0][0]                  
____________________________________________________________________________________________________
activation_3 (Activation)        (None, 10)            0           dense_3[0][0]                    
====================================================================================================
Total params: 669706
____________________________________________________________________________________________________
Train on 60000 samples, validate on 10000 samples
Epoch 1/20
60000/60000 [==============================] - 1s - loss: 0.2476 - acc: 0.9243 - val_loss: 0.1038 - val_acc: 0.9686
Epoch 2/20
60000/60000 [==============================] - 1s - loss: 0.1038 - acc: 0.9682 - val_loss: 0.0869 - val_acc: 0.9733
Epoch 3/20
60000/60000 [==============================] - 1s - loss: 0.0756 - acc: 0.9771 - val_loss: 0.0639 - val_acc: 0.9820
Epoch 4/20
60000/60000 [==============================] - 1s - loss: 0.0613 - acc: 0.9819 - val_loss: 0.0703 - val_acc: 0.9823
Epoch 5/20
60000/60000 [==============================] - 1s - loss: 0.0505 - acc: 0.9846 - val_loss: 0.0766 - val_acc: 0.9818
Epoch 6/20
60000/60000 [==============================] - 1s - loss: 0.0431 - acc: 0.9868 - val_loss: 0.0732 - val_acc: 0.9810
Epoch 7/20
60000/60000 [==============================] - 1s - loss: 0.0380 - acc: 0.9888 - val_loss: 0.0813 - val_acc: 0.9813
Epoch 8/20
60000/60000 [==============================] - 1s - loss: 0.0343 - acc: 0.9902 - val_loss: 0.0886 - val_acc: 0.9803
Epoch 9/20
60000/60000 [==============================] - 1s - loss: 0.0304 - acc: 0.9908 - val_loss: 0.0723 - val_acc: 0.9838
Epoch 10/20
60000/60000 [==============================] - 1s - loss: 0.0283 - acc: 0.9917 - val_loss: 0.0807 - val_acc: 0.9843
Epoch 11/20
60000/60000 [==============================] - 1s - loss: 0.0254 - acc: 0.9928 - val_loss: 0.1049 - val_acc: 0.9818
Epoch 12/20
60000/60000 [==============================] - 1s - loss: 0.0237 - acc: 0.9930 - val_loss: 0.0953 - val_acc: 0.9820
Epoch 13/20
60000/60000 [==============================] - 1s - loss: 0.0232 - acc: 0.9936 - val_loss: 0.1138 - val_acc: 0.9812
Epoch 14/20
60000/60000 [==============================] - 1s - loss: 0.0232 - acc: 0.9936 - val_loss: 0.1011 - val_acc: 0.9837
Epoch 15/20
60000/60000 [==============================] - 1s - loss: 0.0212 - acc: 0.9943 - val_loss: 0.1070 - val_acc: 0.9836
Epoch 16/20
60000/60000 [==============================] - 1s - loss: 0.0198 - acc: 0.9948 - val_loss: 0.1042 - val_acc: 0.9836
Epoch 17/20
60000/60000 [==============================] - 1s - loss: 0.0199 - acc: 0.9947 - val_loss: 0.0993 - val_acc: 0.9851
Epoch 18/20
60000/60000 [==============================] - 1s - loss: 0.0187 - acc: 0.9952 - val_loss: 0.1021 - val_acc: 0.9825
Epoch 19/20
60000/60000 [==============================] - 1s - loss: 0.0173 - acc: 0.9955 - val_loss: 0.0990 - val_acc: 0.9843
Epoch 20/20
60000/60000 [==============================] - 1s - loss: 0.0172 - acc: 0.9956 - val_loss: 0.1186 - val_acc: 0.9836
Test score: 0.118557494809
Test accuracy: 0.9836

python mnist_cnn.py 
Using Theano backend.
Using gpu device 0: GeForce GTX 1070 (CNMeM is disabled, cuDNN 5005)
X_train shape: (60000, 1, 28, 28)
60000 train samples
10000 test samples
Train on 60000 samples, validate on 10000 samples
Epoch 1/12
60000/60000 [==============================] - 3s - loss: 0.3824 - acc: 0.8826 - val_loss: 0.1028 - val_acc: 0.9683
Epoch 2/12
60000/60000 [==============================] - 3s - loss: 0.1510 - acc: 0.9556 - val_loss: 0.0676 - val_acc: 0.9781
Epoch 3/12
60000/60000 [==============================] - 3s - loss: 0.1154 - acc: 0.9654 - val_loss: 0.0555 - val_acc: 0.9818
Epoch 4/12
60000/60000 [==============================] - 3s - loss: 0.0980 - acc: 0.9708 - val_loss: 0.0474 - val_acc: 0.9848
Epoch 5/12
60000/60000 [==============================] - 3s - loss: 0.0854 - acc: 0.9753 - val_loss: 0.0447 - val_acc: 0.9856
Epoch 6/12
60000/60000 [==============================] - 3s - loss: 0.0767 - acc: 0.9768 - val_loss: 0.0422 - val_acc: 0.9860
Epoch 7/12
60000/60000 [==============================] - 3s - loss: 0.0667 - acc: 0.9800 - val_loss: 0.0372 - val_acc: 0.9875
Epoch 8/12
60000/60000 [==============================] - 3s - loss: 0.0617 - acc: 0.9819 - val_loss: 0.0360 - val_acc: 0.9880
Epoch 9/12
60000/60000 [==============================] - 3s - loss: 0.0570 - acc: 0.9828 - val_loss: 0.0337 - val_acc: 0.9885
Epoch 10/12
60000/60000 [==============================] - 3s - loss: 0.0542 - acc: 0.9838 - val_loss: 0.0311 - val_acc: 0.9890
Epoch 11/12
60000/60000 [==============================] - 3s - loss: 0.0501 - acc: 0.9849 - val_loss: 0.0328 - val_acc: 0.9889
Epoch 12/12
60000/60000 [==============================] - 3s - loss: 0.0478 - acc: 0.9860 - val_loss: 0.0309 - val_acc: 0.9895
Test score: 0.0309016281303
Test accuracy: 0.9895

python imdb_lstm.py 
Using Theano backend.
Using gpu device 0: GeForce GTX 1070 (CNMeM is disabled, cuDNN 5005)
Loading data...
20000 train sequences
5000 test sequences
Pad sequences (samples x time)
X_train shape: (20000, 80)
X_test shape: (5000, 80)
Build model...
Train...
(20000, 80)
(20000,)
Train on 20000 samples, validate on 5000 samples
Epoch 1/15
20000/20000 [==============================] - 35s - loss: 0.6216 - acc: 0.6465 - val_loss: 0.4666 - val_acc: 0.7884
Epoch 2/15
20000/20000 [==============================] - 35s - loss: 0.4517 - acc: 0.7964 - val_loss: 0.4195 - val_acc: 0.8122
Epoch 3/15
20000/20000 [==============================] - 35s - loss: 0.3625 - acc: 0.8466 - val_loss: 0.3876 - val_acc: 0.8232
Epoch 4/15
20000/20000 [==============================] - 35s - loss: 0.3051 - acc: 0.8733 - val_loss: 0.4101 - val_acc: 0.8240
Epoch 5/15
20000/20000 [==============================] - 35s - loss: 0.2557 - acc: 0.8963 - val_loss: 0.4417 - val_acc: 0.8180
Epoch 6/15
20000/20000 [==============================] - 35s - loss: 0.2188 - acc: 0.9140 - val_loss: 0.4227 - val_acc: 0.8190
Epoch 7/15
20000/20000 [==============================] - 35s - loss: 0.1881 - acc: 0.9268 - val_loss: 0.4597 - val_acc: 0.8196
Epoch 8/15
20000/20000 [==============================] - 35s - loss: 0.1628 - acc: 0.9360 - val_loss: 0.4697 - val_acc: 0.8228
Epoch 9/15
20000/20000 [==============================] - 35s - loss: 0.1432 - acc: 0.9454 - val_loss: 0.5624 - val_acc: 0.8222
Epoch 10/15
20000/20000 [==============================] - 35s - loss: 0.1268 - acc: 0.9525 - val_loss: 0.5400 - val_acc: 0.8162
Epoch 11/15
20000/20000 [==============================] - 35s - loss: 0.1119 - acc: 0.9570 - val_loss: 0.5552 - val_acc: 0.8120
Epoch 12/15
20000/20000 [==============================] - 35s - loss: 0.0980 - acc: 0.9631 - val_loss: 0.6079 - val_acc: 0.8132
Epoch 13/15
20000/20000 [==============================] - 35s - loss: 0.0886 - acc: 0.9660 - val_loss: 0.7212 - val_acc: 0.8098
Epoch 14/15
20000/20000 [==============================] - 35s - loss: 0.0810 - acc: 0.9691 - val_loss: 0.6517 - val_acc: 0.8182
Epoch 15/15
20000/20000 [==============================] - 35s - loss: 0.0777 - acc: 0.9714 - val_loss: 0.6329 - val_acc: 0.8126
5000/5000 [==============================] - 3s     
Test score: 0.632858865643
Test accuracy: 0.8126

python imdb_cnn.py
Using Theano backend.
Using gpu device 0: GeForce GTX 1070 (CNMeM is disabled, cuDNN 5005)
Loading data...
20000 train sequences
5000 test sequences
Pad sequences (samples x time)
X_train shape: (20000, 400)
X_test shape: (5000, 400)
Build model...
Train on 20000 samples, validate on 5000 samples
Epoch 1/2
20000/20000 [==============================] - 3s - loss: 0.4537 - acc: 0.7692 - val_loss: 0.3060 - val_acc: 0.8706
Epoch 2/2
20000/20000 [==============================] - 3s - loss: 0.2911 - acc: 0.8785 - val_loss: 0.2917 - val_acc: 0.8762

python imdb_cnn_lstm.py
Using Theano backend.
Using gpu device 0: GeForce GTX 1070 (CNMeM is disabled, cuDNN 5005)
Loading data...
20000 train sequences
5000 test sequences
Pad sequences (samples x time)
X_train shape: (20000, 100)
X_test shape: (5000, 100)
Build model...
Train...
Train on 20000 samples, validate on 5000 samples
Epoch 1/2
20000/20000 [==============================] - 20s - loss: 0.4334 - acc: 0.7903 - val_loss: 0.3469 - val_acc: 0.8472
Epoch 2/2
20000/20000 [==============================] - 20s - loss: 0.2304 - acc: 0.9096 - val_loss: 0.3486 - val_acc: 0.8494
4980/5000 [============================>.] - ETA: 0sTest score: 0.348590698451
Test accuracy: 0.8493999933

python imdb_bidirectional_lstm.py 
Using Theano backend.
Using gpu device 0: GeForce GTX 1070 (CNMeM is disabled, cuDNN 5005)
Loading data...
20000 train sequences
5000 test sequences
Pad sequences (samples x time)
X_train shape: (20000, 100)
X_test shape: (5000, 100)
Train...
Train on 20000 samples, validate on 5000 samples
Epoch 1/4
20000/20000 [==============================] - 61s - loss: 0.4615 - acc: 0.7770 - val_loss: 0.3664 - val_acc: 0.8360
Epoch 2/4
20000/20000 [==============================] - 60s - loss: 0.2613 - acc: 0.8989 - val_loss: 0.3729 - val_acc: 0.8412
Epoch 3/4
20000/20000 [==============================] - 60s - loss: 0.1477 - acc: 0.9479 - val_loss: 0.4323 - val_acc: 0.8220
Epoch 4/4
20000/20000 [==============================] - 60s - loss: 0.0860 - acc: 0.9718 - val_loss: 0.5982 - val_acc: 0.8278

python cifar10_cnn.py
Using Theano backend.
Using gpu device 0: GeForce GTX 1070 (CNMeM is disabled, cuDNN 5005)
X_train shape: (50000, 3, 32, 32)
50000 train samples
10000 test samples
Using real-time data augmentation.
Epoch 1/200
50000/50000 [==============================] - 16s - loss: 1.7969 - acc: 0.3352 - val_loss: 1.3471 - val_acc: 0.5020
Epoch 2/200
50000/50000 [==============================] - 16s - loss: 1.3892 - acc: 0.4968 - val_loss: 1.2132 - val_acc: 0.5659
Epoch 3/200
50000/50000 [==============================] - 16s - loss: 1.2408 - acc: 0.5568 - val_loss: 1.0048 - val_acc: 0.6413
Epoch 4/200
50000/50000 [==============================] - 15s - loss: 1.1399 - acc: 0.5938 - val_loss: 0.9285 - val_acc: 0.6746
Epoch 5/200
50000/50000 [==============================] - 15s - loss: 1.0564 - acc: 0.6218 - val_loss: 0.8438 - val_acc: 0.6989
Epoch 6/200
50000/50000 [==============================] - 15s - loss: 1.0104 - acc: 0.6422 - val_loss: 0.8952 - val_acc: 0.6875
Epoch 7/200
50000/50000 [==============================] - 16s - loss: 0.9705 - acc: 0.6595 - val_loss: 0.7983 - val_acc: 0.7173
Epoch 8/200
50000/50000 [==============================] - 15s - loss: 0.9395 - acc: 0.6695 - val_loss: 0.8269 - val_acc: 0.7133
Epoch 9/200
50000/50000 [==============================] - 15s - loss: 0.9163 - acc: 0.6805 - val_loss: 0.7534 - val_acc: 0.7357
Epoch 10/200
50000/50000 [==============================] - 15s - loss: 0.8946 - acc: 0.6867 - val_loss: 0.7337 - val_acc: 0.7448
